{
  "version": 4,
  "terraform_version": "0.12.25",
  "serial": 4,
  "lineage": "6b560670-0212-c24d-6eb1-72186cd1a23d",
  "outputs": {
    "id1": {
      "value": "193606922",
      "type": "string"
    },
    "id2": {
      "value": "193606923",
      "type": "string"
    },
    "ip1": {
      "value": "134.122.112.31",
      "type": "string"
    },
    "ip2": {
      "value": "134.122.112.32",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "jibri",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "cd2c9ad72942d8fe5aa4cff22cd1ecacc40daed85ca0801f057cff7bbfeb398f",
            "rendered": "{\n  // NOTE: this is a *SAMPLE* config file, it will need to be configured with\n  // values from your environment\n  // Where recording files should be temporarily stored\n  \"recording_directory\": \"/tmp/recordings\",\n  // The path to the script which will be run on completed recordings\n  \"finalize_recording_script_path\": \"/home/recordings/finalize.sh\",\n  \"xmpp_environments\": [\n    {\n      // A friendly name for this environment which can be used\n      //  for logging, stats, etc.\n      \"name\": \"prod environment\",\n      // The hosts of the XMPP servers to connect to as part of\n      //  this environment\n      \"xmpp_server_hosts\": [\"kev.domainconf.net\"],\n      // The xmpp domain we'll connect to on the XMPP server\n      \"xmpp_domain\": \"kev.domainconf.net\",\n      // Jibri will login to the xmpp server as a privileged user\n      \"control_login\": {\n        // The domain to use for logging in\n        \"domain\": \"auth.kev.domainconf.net\",\n        // The credentials for logging in\n        \"username\": \"jibri\",\n        \"password\": \"5EBFFE148C696542D7B52F1024EB0055\"\n      },\n      // Using the control_login information above, Jibri will join\n      //  a control muc as a means of announcing its availability\n      //  to provide services for a given environment\n      \"control_muc\": {\n        \"domain\": \"internal.auth.kev.domainconf.net\",\n        \"room_name\": \"JibriBrewery\",\n        \"nickname\": \"jibriinstancec4b710bb\"\n      },\n      // All participants in a call join a muc so they can exchange\n      //  information.  Jibri can be instructed to join a special muc\n      //  with credentials to give it special abilities (e.g. not being\n      //  displayed to other users like a normal participant)\n      \"call_login\": {\n        \"domain\": \"recorder.domain.com\",\n        \"username\": \"recorder\",\n        \"password\": \"5EBFFE148C696542D7B52F1024EB0055\"\n      },\n      // When jibri gets a request to start a service for a room, the room\n      //  jid will look like:\n      //  roomName@optional.prefixes.subdomain.xmpp_domain\n      // We'll build the url for the call by transforming that into:\n      //  https://xmpp_domain/subdomain/roomName\n      // So if there are any prefixes in the jid (like jitsi meet, which\n      //  has its participants join a muc at conference.xmpp_domain) then\n      //  list that prefix here so it can be stripped out to generate\n      //  the call url correctly\n      \"room_jid_domain_string_to_strip_from_start\": \"conference.\",\n      // The amount of time, in minutes, a service is allowed to continue.\n      //  Once a service has been running for this long, it will be\n      //  stopped (cleanly).  A value of 0 means an indefinite amount\n      //  of time is allowed\n      \"usage_timeout\": \"0\"\n    }\n  ]\n}\n\n",
            "template": "{\n  // NOTE: this is a *SAMPLE* config file, it will need to be configured with\n  // values from your environment\n  // Where recording files should be temporarily stored\n  \"recording_directory\": \"/tmp/recordings\",\n  // The path to the script which will be run on completed recordings\n  \"finalize_recording_script_path\": \"/home/recordings/finalize.sh\",\n  \"xmpp_environments\": [\n    {\n      // A friendly name for this environment which can be used\n      //  for logging, stats, etc.\n      \"name\": \"prod environment\",\n      // The hosts of the XMPP servers to connect to as part of\n      //  this environment\n      \"xmpp_server_hosts\": [\"${jitsi_domain}\"],\n      // The xmpp domain we'll connect to on the XMPP server\n      \"xmpp_domain\": \"${jitsi_domain}\",\n      // Jibri will login to the xmpp server as a privileged user\n      \"control_login\": {\n        // The domain to use for logging in\n        \"domain\": \"auth.${jitsi_domain}\",\n        // The credentials for logging in\n        \"username\": \"jibri\",\n        \"password\": \"5EBFFE148C696542D7B52F1024EB0055\"\n      },\n      // Using the control_login information above, Jibri will join\n      //  a control muc as a means of announcing its availability\n      //  to provide services for a given environment\n      \"control_muc\": {\n        \"domain\": \"internal.auth.${jitsi_domain}\",\n        \"room_name\": \"JibriBrewery\",\n        \"nickname\": \"jibriinstancec4b710bb\"\n      },\n      // All participants in a call join a muc so they can exchange\n      //  information.  Jibri can be instructed to join a special muc\n      //  with credentials to give it special abilities (e.g. not being\n      //  displayed to other users like a normal participant)\n      \"call_login\": {\n        \"domain\": \"recorder.domain.com\",\n        \"username\": \"recorder\",\n        \"password\": \"5EBFFE148C696542D7B52F1024EB0055\"\n      },\n      // When jibri gets a request to start a service for a room, the room\n      //  jid will look like:\n      //  roomName@optional.prefixes.subdomain.xmpp_domain\n      // We'll build the url for the call by transforming that into:\n      //  https://xmpp_domain/subdomain/roomName\n      // So if there are any prefixes in the jid (like jitsi meet, which\n      //  has its participants join a muc at conference.xmpp_domain) then\n      //  list that prefix here so it can be stripped out to generate\n      //  the call url correctly\n      \"room_jid_domain_string_to_strip_from_start\": \"conference.\",\n      // The amount of time, in minutes, a service is allowed to continue.\n      //  Once a service has been running for this long, it will be\n      //  stopped (cleanly).  A value of 0 means an indefinite amount\n      //  of time is allowed\n      \"usage_timeout\": \"0\"\n    }\n  ]\n}\n\n",
            "vars": {
              "jitsi_domain": "kev.domainconf.net"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_droplet",
      "name": "recorder",
      "each": "list",
      "provider": "provider.digitalocean",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2020-05-25T14:13:54Z",
            "disk": 25,
            "id": "193606922",
            "image": "ubuntu-18-04-x64",
            "ipv4_address": "134.122.112.31",
            "ipv4_address_private": "",
            "ipv6": false,
            "ipv6_address": "",
            "ipv6_address_private": null,
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "kev.domainconf.net-recorder",
            "price_hourly": 0.05952,
            "price_monthly": 40,
            "private_networking": false,
            "region": "nyc1",
            "resize_disk": true,
            "size": "c-2",
            "ssh_keys": [
              "48:dd:35:37:1e:81:1c:62:c1:08:01:e1:3d:98:ea:af",
              "b6:35:38:85:eb:f7:41:31:05:9d:e2:ca:31:63:f8:8d",
              "d5:31:c1:00:c9:ff:52:67:98:9a:a8:80:a3:b9:3a:e6"
            ],
            "status": "active",
            "tags": [
              "recorder"
            ],
            "urn": "do:droplet:193606922",
            "user_data": null,
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_tag.jibritag"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "backups": false,
            "created_at": "2020-05-25T14:13:54Z",
            "disk": 25,
            "id": "193606923",
            "image": "ubuntu-18-04-x64",
            "ipv4_address": "134.122.112.32",
            "ipv4_address_private": "",
            "ipv6": false,
            "ipv6_address": "",
            "ipv6_address_private": null,
            "locked": false,
            "memory": 4096,
            "monitoring": false,
            "name": "kev.domainconf.net-recorder",
            "price_hourly": 0.05952,
            "price_monthly": 40,
            "private_networking": false,
            "region": "nyc1",
            "resize_disk": true,
            "size": "c-2",
            "ssh_keys": [
              "48:dd:35:37:1e:81:1c:62:c1:08:01:e1:3d:98:ea:af",
              "b6:35:38:85:eb:f7:41:31:05:9d:e2:ca:31:63:f8:8d",
              "d5:31:c1:00:c9:ff:52:67:98:9a:a8:80:a3:b9:3a:e6"
            ],
            "status": "active",
            "tags": [
              "recorder"
            ],
            "urn": "do:droplet:193606923",
            "user_data": null,
            "vcpus": 2,
            "volume_ids": [],
            "vpc_uuid": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "digitalocean_tag.jibritag"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_tag",
      "name": "jibritag",
      "provider": "provider.digitalocean",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "recorder",
            "name": "recorder"
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
